from generic_algo import GeneticAlgo
from shared_code import alphabet

if __name__ == '__main__':
    intro_tasks = [
        ("EFFPQLEKVTVPCPYFLMVHQLUEWCNVWFYGHYTCETHQEKLPVMSAKSPVPAPV"
         "YWMVHQLUSPQLYWLASLFVWPQLMVHQLUPLRPSQLULQESPBLWPCSVRVWFLHL"
         "WFLWPUEWFYOTCMQYSLWOYWYETHQEKLPVMSAKSPVPAPVYWHEPPLUWSGYUL"
         "EMQTLPPLUGUYOLWDTVSQETHQEKLPVPVSMTLEUPQEPCYAMEWWYTYWDLUUL"
         "TCYWPQLSEOLSVOHTLUYAPVWLYGDALSSVWDPQLNLCKCLRQEASPVILSLEUM"
         "QBQVMQCYAHUYKEKTCASLFPYFLMVHQLUPQLHULIVYASHEUEDUEHQBVTTPQ"
         "LVWFLRYGMYVWMVFLWMLSPVTTBYUNESESADDLSPVYWCYAMEWPUCPYFVIVF"
         "LPQLOLSSEDLVWHEUPSKCPQLWAOKLUYGMQEUEMPLUSVWENLCEWFEHHTCGU"
         "LXALWMCEWETCSVSPYLEMQYGPQLOMEWCYAGVWFEBECPYASLQVDQLUYUFLU"
         "GULXALWMCSPEPVSPVMSBVPQPQVSPCHLYGMVHQLUPQLWLRPOEDVMETBYUF"
         "BVTTPENLPYPQLWLRPTEKLWZYCKVPTCSTESQPBYMEHVPETCMEHVPETZMEH"
         "VPETKTMEHVPETCMEHVPETT")
    ]
    # ADD
    # THE
    # AMIBITY
    # TO
    # DELICHERANYKINDOPCOBYABCHAMETIL
    # SUMSTITUTION
    # LICHERS
    # THE ONE USED IN THE LICHER TEXTS HERE HAS TWENTY SIX INDECENDENTRANDOVBYLH
    # OSENVONOABCHAMETILSUMSTITUTIONCATTERNSPOREALHBETTERPROVENGBISHAB
    # CHAMETITISLBEARTHATYOULANNOBONGERREBYONTHESAVESIVCBEROUTINEOPGUE
    # SSINGTHEKEYMYEXHAUSTIFESEARLHWHILHYOUCROMAMBYUSEDTODELICHERTHECR
    # EFIOUSCARAGRACHWIBBTHEINDEXOPLOINLIDENLESTIBBWORKASASUGGESTIONYO
    # ULANTRYTODIFIDETHEVESSAGEINCARTSMYTHENUVMEROPLHARALTERSINAKEYAND
    # ACCBYPREQUENLYANABYSISTOEALHOPTHEVLANYOUPINDAWAYTOUSEHIGHERORDER
    # PREQUENLYSTATISTILSWITHTHISTYCEOPLICHERTHENEXTVAGILABWORDWIBBTAK
    # ETOTHENEXTBAMENJOYMITBYSBASHTWOLACITABYLACITABJLACITABMBLACITABY
    # LACITABB

    # third line solving:

    solver = GeneticAlgo('../assets/tri_grams_fq.csv', alphabet)
    text = solver.solve(bytes(intro_tasks[0], "ascii"))
    print(text)
